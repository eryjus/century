#####################################################################################################################
##                                                                                                                 
##  src/kernel/src/i686/Makefrag -- The make plans for the i686 (32-bit) version of the OS
##
##        Copyright (c)  2017 -- Adam Clark
##
##        "THE BEER-WARE LICENSE" (by Poul-Henning Kamp; Revision 42):
##        <hobbyos@eryjus.com> wrote this software.  As long as you retain this notice
##        you can do whatever you want with this stuff. If we meet some day, and you
##        think this stuff is worth it, you can buy me a beer in return.
##
##  In order to keep the different Makefrag files from stepping on each other, all definitions will begin with 
##  'I686-KERNEL-'.
##
## ----------------------------------------------------------------------------------------------------------------- 
##                                                                                                                 
##     Date     Tracker  Version  Pgmr  Description                                                                         
##  ----------  -------  -------  ----  ---------------------------------------------------------------------------
##  2017-04-07  Initial   0.0.0   ADCL  Initial version 
## 
#####################################################################################################################


#
# -- File Definitions
#    ----------------
I686-KERNEL-SRC := src/kernel/src

I686-KERNEL-S   := $(wildcard $(I686-KERNEL-SRC)/i686/*.s) $(wildcard $(I686-KERNEL-SRC)/*.s)
I686-KERNEL-S   := $(notdir $(I686-KERNEL-S))

I686-KERNEL-C   := $(wildcard $(I686-KERNEL-SRC)/i686/*.c) $(wildcard $(I686-KERNEL-SRC)/*.c)
I686-KERNEL-C   := $(notdir $(I686-KERNEL-C))

I686-KERNEL-O   := $(subst .s,.o,$(I686-KERNEL-S))
I686-KERNEL-O   += $(subst .c,.o,$(I686-KERNEL-C))
I686-KERNEL-O   := $(sort $(I686-KERNEL-O))

I686-KERNEL-D   := $(subst .o,.d,$(I686-KERNEL-O))

I686-KERNEL-OBJ := obj/i686

I686-KERNEL-IMG := bin/i686/kernel.img
I686-KERNEL-ELF := bin/i686/kernel.elf

I686-KERNEL-SYS := sysroot/i686/kernel.img

I686-KERNEL-LS  := $(I686-KERNEL-SRC)/i686/kernel.ld

I686-KERNEL-IA  := -Wa,-I -Wa,src/kernel/src/i686 -Wa,-I -Wa,src/kernel/inc
I686-KERNEL-IC  := $(subst $(ASM-PARM),,$(I686-KERNEL-IA))


#
# -- Add to the global vars
#    ----------------------
ALL              += $(I686-KERNEL-SYS)
CLEAN            += i686-kernel-clean
DEPEND           += $(addprefix obj/i686/,$(I686-KERNEL-D))


#
# -- Build Tool definitions
#    ----------------------
I686-KERNEL-AS  := i686-elf-gcc -fpic -ffreestanding -x assembler-with-cpp \
		-Wa,-I -Wa,$(I686-KERNEL-IA) -Wall -Werror -c
I686-KERNEL-CC  := i686-elf-gcc -fpic -ffreestanding $(I686-KERNEL-IC) -Wall -Werror -c
I686-KERNEL-DEP := i686-elf-cpp -M -ffreestanding $(I686-KERNEL-IC)
I686-KERNEL-LD  := i686-elf-gcc -T $(I686-KERNEL-LS) -ffreestanding -O2 -nostdlib
I686-KERNEL-LIBS  := 
I686-KERNEL-OBJCOPY  := i686-elf-objcopy


#
# -- We are going to make the OS for a i686; build it all
#    ----------------------------------------------------
.PHONY: i686
i686: i686-kernel 


#
# -- Build the kernel for the i686
#    -----------------------------
.PHONY: i686-kernel
i686-kernel: $(I686-KERNEL-SYS)


#
# -- Copy the kernel to the sysroot image
#    ------------------------------------
$(I686-KERNEL-SYS): $(I686-KERNEL-IMG) 
	echo "  I686-SYSROOT:" $(notdir $@)	
	mkdir -p $(dir $@)
	rm -f $@
	cp $< $@


#
# -- Create the kernel image
#    -----------------------
$(I686-KERNEL-IMG): $(I686-KERNEL-ELF) 
	echo "  I686-OBJCOPY:" $(notdir $@)
	mkdir -p $(dir $@)
	$(I686-KERNEL-OBJCOPY) $< -O binary $@
	
	
#
# -- Create the kernel image
#    -----------------------
$(I686-KERNEL-ELF): $(addprefix $(I686-KERNEL-OBJ)/,$(I686-KERNEL-O)) $(I686-KERNEL-LIBS) $(I686-KERNEL-LS)
	echo "  I686-LD     :" $(notdir $@)
	mkdir -p $(dir $@)
	$(I686-KERNEL-LD) -o $@ $(addprefix $(I686-KERNEL-OBJ)/,$(I686-KERNEL-O)) $(I686-KERNEL-LIBS)
	
	
#
# -- Generic rule to make a .o file from the i686 source folder
#    -----------------------------------------------------------
$(I686-KERNEL-OBJ)/%.o: $(I686-KERNEL-SRC)/i686/%.s 
	echo "  I686-AS     :" $(notdir $<)
	mkdir -p $(dir $@)
	$(I686-KERNEL-AS) -o $@ $<

	
#
# -- Generic rule to make a .d file from the i686 source folder
#    -----------------------------------------------------------
$(I686-KERNEL-OBJ)/%.d: $(I686-KERNEL-SRC)/i686/%.s
	echo "  I686-DEPEND :" $(notdir $<)
	mkdir -p $(dir $@)
	rm -f $@
	$(I686-KERNEL-DEP)  $<  > $@.$$$$;													\
	sed 's,\($*\)\.o[ :]*,$(I686-KERNEL-OBJ)/\1.o $@ : ,g' < $@.$$$$ > $@;				\
	rm -f $@.$$$$


#
# -- Generic rule to make a .o file from the i686 source folder
#    -----------------------------------------------------------
$(I686-KERNEL-OBJ)/%.o: $(I686-KERNEL-SRC)/i686/%.c
	echo "  I686-CC     :" $(notdir $<)
	mkdir -p $(dir $@)
	$(I686-KERNEL-CC) -o $@ $<

	
#
# -- Generic rule to make a .d file from the i686 source folder
#    -----------------------------------------------------------
$(I686-KERNEL-OBJ)/%.d: $(I686-KERNEL-SRC)/i686/%.c
	echo "  I686-DEPEND :" $(notdir $<)
	mkdir -p $(dir $@)
	rm -f $@
	$(I686-KERNEL-DEP)  $<  > $@.$$$$;													\
	sed 's,\($*\)\.o[ :]*,$(I686-KERNEL-OBJ)/\1.o $@ : ,g' < $@.$$$$ > $@;				\
	rm -f $@.$$$$
	

#
# -- Generic rule to make a .o file from the kernel source folder
#    ------------------------------------------------------------
$(I686-KERNEL-OBJ)/%.o: $(I686-KERNEL-SRC)/%.s 
	echo "  I686-AS     :" $(notdir $<)
	mkdir -p $(dir $@)
	$(I686-KERNEL-AS) -o $@ $<

	
#
# -- Generic rule to make a .d file from the kernel source folder
#    ------------------------------------------------------------
$(I686-KERNEL-OBJ)/%.d: $(I686-KERNEL-SRC)/%.s
	echo "  I686-DEPEND :" $(notdir $<)
	mkdir -p $(dir $@)
	rm -f $@
	$(I686-KERNEL-DEP)  $<  > $@.$$$$;													\
	sed 's,\($*\)\.o[ :]*,$(I686-KERNEL-OBJ)/\1.o $@ : ,g' < $@.$$$$ > $@;				\
	rm -f $@.$$$$


#
# -- Generic rule to make a .o file from the kernel source folder
#    ------------------------------------------------------------
$(I686-KERNEL-OBJ)/%.o: $(I686-KERNEL-SRC)/%.c
	echo "  I686-CC     :" $(notdir $<)
	mkdir -p $(dir $@)
	$(I686-KERNEL-CC) -o $@ $<

	
#
# -- Generic rule to make a .d file from the kernel source folder
#    ------------------------------------------------------------
$(I686-KERNEL-OBJ)/%.d: $(I686-KERNEL-SRC)/%.c
	echo "  I686-DEPEND :" $(notdir $<)
	mkdir -p $(dir $@)
	rm -f $@
	$(I686-KERNEL-DEP)  $<  > $@.$$$$;													\
	sed 's,\($*\)\.o[ :]*,$(I686-KERNEL-OBJ)/\1.o $@ : ,g' < $@.$$$$ > $@;				\
	rm -f $@.$$$$
	

#
# -- clean up
#    --------
.PHONY: i686-kernel-clean
i686-kernel-clean:
	echo "Cleaning i686-kernel..."
	rm -fR $(I686-KERNEL-OBJ)
	rm -fR $(dir $(I686-KERNEL-IMG))
	rm -fR $(dir $(I686-KERNEL-ELF))
	rm -fR $(dir $(I686-KERNEL-SYS))
	echo I686-KERNEL-D = $(I686-KERNEL-D)
	echo I686-KERNEL-O = $(I686-KERNEL-O)
	